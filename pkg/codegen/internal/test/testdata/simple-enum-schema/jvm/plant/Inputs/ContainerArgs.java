// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.Plant;

    public final class ContainerArgs extends io.pulumi.ResourceArgs {
        private Optional<Input<io.pulumiPlant.ContainerBrightness>> brightness = 1;
        public Optional<Input<io.pulumiPlant.ContainerBrightness>> getBrightness() {
           return brightness.isPresent() ? brightness.get() : new Optional<Input<io.pulumiPlant.ContainerBrightness>>();
        }
        public ContainerArgs setBrightness(Optional<Input<io.pulumiPlant.ContainerBrightness>> brightness) {
            this.brightness = brightness != null ? Optional.of(brightness) : Optional.empty();
            return this;
        }

        private Optional<InputUnion<io.pulumiPlant.ContainerColor, String>> color = Optional.empty();
        public Optional<InputUnion<io.pulumiPlant.ContainerColor, String>> getColor() {
           return color.isPresent() ? color.get() : new Optional<InputUnion<io.pulumiPlant.ContainerColor, String>>();
        }
        public ContainerArgs setColor(Optional<InputUnion<io.pulumiPlant.ContainerColor, String>> color) {
            this.color = color != null ? Optional.of(color) : Optional.empty();
            return this;
        }

        private Optional<Input<String>> material = Optional.empty();
        public Optional<Input<String>> getMaterial() {
           return material.isPresent() ? material.get() : new Optional<Input<String>>();
        }
        public ContainerArgs setMaterial(Optional<Input<String>> material) {
            this.material = material != null ? Optional.of(material) : Optional.empty();
            return this;
        }

        private Optional<Input<io.pulumiPlant.ContainerSize>> size = Optional.empty();
        public Input<io.pulumiPlant.ContainerSize> getSize() {
           return size.isPresent() ? size.get() : new Input<io.pulumiPlant.ContainerSize>();
        }
        public ContainerArgs setSize(Input<io.pulumiPlant.ContainerSize> size) {
            this.size = size != null ? Optional.of(size) : Optional.empty();
            return this;
        }

        public ContainerArgs(
            Optional<Input<io.pulumiPlant.ContainerSize>> size
            ) {
                this.size = size;
        }
        }
