// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.Plant.Tree.V1;
    public class Nursery extends Pulumi.CustomResource {
        /**        * Create a Nursery resource with the given name, arguments, and options.
        * @param name the unique name of the resource
        * @param args The arguments used to populate this resource's properties
        * @param options A bag of options that control this resource's behavior
        */
        public Nursery(string name, NurseryArgs args, Optional<CustomResourceOptions> options) {
            super("plant:tree/v1:Nursery", name, args.isPresent()?args.get(): new NurseryArgs(), makeResourceOptions(options, ""));
        }

        private static CustomResourceOptions makeResourceOptions(CustomResourceOptions options, Optional<Input<String>> id) {
            CustomResourceOptions defaultOptions = new CustomResourceOptions();
            defaultOptions.Verion = Utilities.Version;
            CustomResourceOptions merged = CustomResourceOptions.merge(defaultOptions, options);
            merged.Id = id.isPresent() ? id.get() : merged.Id;
            return merged;
        }
    }

    public final class NurseryArgs extends io.pulumi.ResourceArgs {

        /**
        * The sizes of trees available
        */
        private InputMap<io.pulumiPlant.Tree.V1.TreeSize> sizes = Optional.empty();
        public InputMap<io.pulumiPlant.Tree.V1.TreeSize> getSizes() {
           return sizes.isPresent() ? sizes.get() : new InputMap<io.pulumiPlant.Tree.V1.TreeSize>();
        }
        public NurseryArgs setSizes(InputMap<io.pulumiPlant.Tree.V1.TreeSize> sizes) {
            this.sizes = sizes != null ? Optional.of(sizes) : Optional.empty();
            return this;
        }


        /**
        * The varieties available
        */
        private InputList<io.pulumiPlant.Tree.V1.RubberTreeVariety> varieties = Optional.empty();
        public InputList<io.pulumiPlant.Tree.V1.RubberTreeVariety> getVarieties() {
           return varieties.isPresent() ? varieties.get() : new InputList<io.pulumiPlant.Tree.V1.RubberTreeVariety>();
        }
        public NurseryArgs setVarieties(InputList<io.pulumiPlant.Tree.V1.RubberTreeVariety> varieties) {
            this.varieties = varieties != null ? Optional.of(varieties) : Optional.empty();
            return this;
        }

        public NurseryArgs(
            InputList<io.pulumiPlant.Tree.V1.RubberTreeVariety> varieties
            ) {
                this.varieties = varieties;
        }
        }
