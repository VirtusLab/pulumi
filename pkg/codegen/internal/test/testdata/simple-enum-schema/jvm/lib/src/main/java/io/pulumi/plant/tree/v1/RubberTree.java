// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.plant.tree.v1;
public class RubberTree extends io.pulumi.CustomResource {
    public io.pulumi.Output<java.util.Optional<io.pulumi.plant.outputs.Container>> container;
    public io.pulumi.Output<io.pulumi.plant.tree.v1.Diameter> diameter;
    public io.pulumi.Output<java.util.Optional<String>> farm;
    public io.pulumi.Output<java.util.Optional<io.pulumi.plant.tree.v1.TreeSize>> size;
    public io.pulumi.Output<io.pulumi.plant.tree.v1.RubberTreeVariety> type;

    /**    * Create a RubberTree resource with the given name, arguments, and options.
    * @param name the unique name of the resource
    * @param args The arguments used to populate this resource's properties
    * @param options A bag of options that control this resource's behavior
    */
    public RubberTree(String name, RubberTreeArgs args, @javax.annotation.Nullable io.pulumi.CustomResourceOptions options) {
        super("plant:tree/v1:RubberTree", name, args, makeResourceOptions(options, io.pulumi.Input.create("")));
    }

    private RubberTree(String name, io.pulumi.Input<String> id, @javax.annotation.Nullable RubberTreeState state, @javax.annotation.Nullable io.pulumi.CustomResourceOptions options) {
        super("plant:tree/v1:RubberTree", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.CustomResourceOptions makeResourceOptions(@javax.annotation.Nullable io.pulumi.CustomResourceOptions options, io.pulumi.Input<String> id) {
        io.pulumi.CustomResourceOptions defaultOptions = new io.pulumi.CustomResourceOptions();
        defaultOptions.Version = Utilities.Version;
        io.pulumi.CustomResourceOptions merged = io.pulumi.CustomResourceOptions.merge(defaultOptions, options);
        merged.Id = id;
        return merged;
    }
    /**    * Get an existing RubberTree resource's state with the given name, ID, and optional extra
    * properties used to qualify the lookup.
    * @param name The unique name of the resulting resource.
    * @param id The unique provider ID of the resource to lookup.
    * @param state Any extra arguments used during the lookup.
    * @param options A bag of options that control this resource's behavior.
    */
    public static RubberTree get(String name, @javax.annotation.Nullable String id, @javax.annotation.Nullable RubberTreeState state, io.pulumi.CustomResourceOptions options) {
        return new RubberTree(name, io.pulumi.Input.create(id), state, options);
    }
}
